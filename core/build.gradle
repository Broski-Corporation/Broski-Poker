[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
eclipse.project.name = appName + '-core'

dependencies {
  api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
  api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
  implementation 'org.postgresql:postgresql:42.7.2'
  implementation 'org.mindrot:jbcrypt:0.4'

  if(enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

  // networking library for mp
  implementation "com.esotericsoftware:kryonet:2.22.0-RC1"

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

  testImplementation 'org.mockito:mockito-core:5.12.0'
  testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
}

task serverJar(type: Jar) {
    archiveBaseName = 'poker-server'
    archiveVersion = '1.0.0'
    destinationDirectory = file("$rootDir/core/build/libs")

    from project(':core').sourceSets.main.output

    manifest {
        attributes(
            'Main-Class': 'io.github.broskipoker.server.PokerServer'
        )
    }

    // include all runtime dependencies
    from {
        project(':core').configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

serverJar.dependsOn ':core:classes'

test {
    useJUnitPlatform()
}
